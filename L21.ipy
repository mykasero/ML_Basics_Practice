import numpy as np

arr = np.arange(5,29,2)
boolArr = []

for i in range(len(arr)):
    if arr[i]<10:
        boolArr = np.append(boolArr,True)
    else:
        boolArr = np.append(boolArr,False)
#for przekombinowany, mozna bylo uzyc boolArr = arr<10 xD         
boolArr = boolArr.astype('bool')
newArr = arr[boolArr]

newArr = arr[arr<20]

newArr = arr[arr%3 == 0]

newArr = arr[(arr>10) & (arr<20)]

arr = np.arange(0,24,1).reshape((4,6))

arr[0]

arr[0][1]

arr[0][1:3]

arr[0][1:4]

arr[0][:]

arr[:,1]

arr[:3,1]

arr[:3,1:3]

arr[:,-1]

arr[:,:-1]

arr = np.arange(0,50,1).reshape((10,5))

split_level = 0.2
num_rows = arr.shape[0]
split_border = split_level * num_rows

np.random.shuffle(arr)

data = np.arange(500).reshape(100,5)
np.random.shuffle(data)

split_level = 0.2
num_rows = data.shape[0]
split_border = split_level * num_rows

X_test = data[:round(split_border),:-1]
X_train = data[round(split_border):,:-1]
y_test = data[:round(split_border),-1]
y_train = data[round(split_border):,-1]

data.shape
X_train.shape
X_test.shape
y_train.shape
y_test.shape

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(
    data[:, :-1], data[:, -1], test_size = 0.2, shuffle = True)

data.shape
X_train.shape
X_test.shape
y_train.shape
y_test.shape
